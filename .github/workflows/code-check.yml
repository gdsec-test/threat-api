name: Code quality check

on:
  pull_request:
    branches: [ main ] 

jobs:
  tartufo:
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout Repository
      uses: actions/checkout@5a4ac90 # Checkout this repository

    - name: Checkout GoDaddy Actions repo # Checkout shared actions repository gd-actions 
      uses: actions/checkout@5a4ac90 
      with: 
        repository: gdcorp-cp/gd-actions
        token: ${{ secrets.REPO_CLONE_TOKEN_SA_PAT }} # PAT with read access to gdcorp-cp/gd-actions
        path: gd-actions # Relative to github working directory
        persist-credentials: false

    - name: Run Tartufo
      uses: ./gd-actions/tartufo # Relative reference to action in gd-actions repository
      with:
        github_token: ${{ secrets.REPO_CLONE_TOKEN_SA_PAT }}

  python-code-check:
    needs: tartufo # Start this job after tartufo succeeds
    runs-on: ubuntu-latest # Using github hosted runner after it clears tartufo scan
    steps: 
    - name: Checkout Repository
      uses: actions/checkout@5a4ac90

    - name: Set up Python 3.9.0
      uses: actions/setup-python@a112144
      with:
        python-version: 3.9.0
        architecture: 'x64'

    - name: Setup Python Environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install -U pip
        
    - name: Install Python dependencies
      env:
        SECURESERVER_ACCESS_KEY_GHC_SA: ${{ secrets.SECURESERVER_ACCESS_KEY_GHC_SA }}
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
      run: |
        eval "$(ssh-agent -s)"
        ssh-add - <<< "${SECURESERVER_ACCESS_KEY_GHC_SA}"
        
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -U -r requirements.txt -r requirements-test.txt

        ssh-agent -k

    - name: Lint with flake8
      run: |
        source venv/bin/activate
        flake8 ./apis  ./tools ./sceptre/resources/authorizer

    # Pylint is failing on lot of files, switching off temporarily
    # - name: Lint with pylint    
    #   run: |
    #     source venv/bin/activate
    #     pylint ./apis ./sceptre/resources/authorizer ./tools

    - name: Static security analysis with Bandit
      run: |
        source venv/bin/activate
        bandit -r  ./apis ./sceptre/resources/authorizer ./tools 

    - name: Python Tests
      run: |
        source venv/bin/activate
        python -m pytest -v

  go-code-check:
    needs: tartufo
    runs-on: self-hosted

    strategy:
      matrix:
        go-apis: [geoip, whois] # Add golang apis modules here

    steps:
    - name: Reset gitconfig
      run: | 
        rm -f $HOME/.gitconfig

    - name: Checkout this repository
      uses: actions/checkout@5a4ac90

    - name: Set up Go
      uses: actions/setup-go@3b4dc6c
      with:
        go-version: '1.15.6'

    - name: Install dependencies
      env:
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        SECURESERVER_ACCESS_KEY_GHC_SA: ${{ secrets.SECURESERVER_ACCESS_KEY_GHC_SA }}
        GITHUBCLOUD_SSH_PRIVATE_KEY: ${{ secrets.GITHUBCLOUD_SSH_PRIVATE_KEY }}
        GOPRIVATE: "github.secureserver.net,github.com/gdcorp-*"
      run: |
        eval "$(ssh-agent -s)"

        ssh-add - <<< "${SECURESERVER_ACCESS_KEY_GHC_SA}"
        ssh-add - <<< "${GITHUBCLOUD_SSH_PRIVATE_KEY}"

        git config --global url.git@github.secureserver.net:.insteadOf https://github.secureserver.net/
        git config --global url.git@github.com:gdcorp-.insteadOf https://github.com/gdcorp-

        go mod tidy

        ssh-agent -k

    - name: Running apis/${{ matrix.go-apis }}
      run: |
        cd ./apis/${{ matrix.go-apis }}
        go mod tidy 
        go get
        go fmt
        go build

    - name: Running tests for ${{ matrix.go-apis }}
      run: |
        cd ./apis/${{ matrix.go-apis }}
        go test

      
    # TODO: 
    #   Run the same for matrix go-lambdas: [manager, responseprocessor] 
    # - name: Running lambdas/${{ matrix.go-lambdas }}
    #   run: |
    #     cd ./lambdas/${{ matrix.go-lambdas }}
    #     go mod tidy 
    #     go get
    #     go fmt
    #     go build

    # - name: Running tests for ${{ matrix.go-lambdas }}
    #   run: |
    #     cd ./lambdas/${{ matrix.go-lambdas }}
    #     go test

    # SPAQ dashboard 
    # - name: Coverage upload to KPI Dashboard
    #   uses: ./gd-actions/spaq-quality
    #   with:
    #     service-key: "testing-github-actions-threat"

    # White Source integration

    # Cirrus Scans 

