name: ThreatAPI Deployment (PROD)

# Deploys the ThreatAPI main branch to the AWS PROD environment using sceptre.

# This workflow needs to run on a self-hosted runner for the time being,
# because "go get" can't access modules on github.secureserver.net correctly
# when running on a GitHub hosted runner, even when the typical workarounds are
# in place to rewrite URLs from https://github.secureserver.net to
# git@github.secureserver.net and the GOPRIVATE environment variable has been
# set.

# It may be possible to avoid this restriction by reading:
# https://tip.golang.org/cmd/go/#hdr-Remote_import_paths
# and modifying modules that exist on github.secureserver.net by specifying
# ".git" in the import list, since the golang tools don't know that the vcs
# type of github.secureserver.net is "git".

# See: https://github.com/golang/go/issues/38964

on:
  push:
    branches: [ main ] # Trigger workflow on all pushes to main branch
  workflow_dispatch:

jobs:
  deploy_to_prod:
    runs-on: [self-hosted,threat-runners]
    if: github.ref == 'refs/heads/main'
    steps:
      # Get version to reference in CO
      - name: Get version
        id: get-version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      # Deploy to prod
      - name: Reset gitconfig
        run: |
          rm -f $HOME/.gitconfig

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      # Checkout the change-order-action
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          repository: gdcorp-actions/change-order-action
          ref: main
          token: ${{ secrets.REPO_CLONE_TOKEN_SA_PAT }}
          path: change-order-action

      # Create Change Order
      - name: Create Change Order
        uses: ./change-order-action
        id: create-co
        with:
          snowUser: ${{ secrets.SNOW_USER }}
          snowPass: ${{ secrets.SNOW_PASS }}
          snowUrl: https://godaddy.service-now.com
          action: create
          owningGroup: ENG-Threat Research
          tag: ${{ steps.get-version.outputs.VERSION }}
          environment: production
          region: us-west-2 # optional, will be appended to description
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          state: InProgress

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::338932590174:role/GD-AWS-USA-GD-ThreatTools-Prod-Deploy
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Setup python environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -U pip

      - name: Install python dependencies
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
          SECURESERVER_ACCESS_KEY_GHC_SA: ${{ secrets.SECURESERVER_ACCESS_KEY_GHC_SA }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${SECURESERVER_ACCESS_KEY_GHC_SA}"

          source venv/bin/activate
          chmod u+x ./getpipconf.sh
          ./getpipconf.sh
          pip install -U -r requirements.txt -r requirements-test.txt

          ssh-agent -k

      - name: Setup golang environment
        uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab
        with:
          go-version: '1.17.2'

      - name: Install golang dependencies
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
          SECURESERVER_ACCESS_KEY_GHC_SA: ${{ secrets.SECURESERVER_ACCESS_KEY_GHC_SA }}
          GITHUBCLOUD_SSH_PRIVATE_KEY: ${{ secrets.GITHUBCLOUD_SSH_PRIVATE_KEY }}
          GH_ACCESS_TOKEN: ${{ secrets.REPO_CLONE_TOKEN_SA_PAT }}
          GOPRIVATE: "github.secureserver.net,github.com/gdcorp-*"
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${SECURESERVER_ACCESS_KEY_GHC_SA}"
          ssh-add - <<< "${GITHUBCLOUD_SSH_PRIVATE_KEY}"

          git config --global url.git@github.secureserver.net:.insteadOf https://github.secureserver.net/
          git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
          go mod tidy

          ssh-agent -k

      - name: Run sceptre
        run: |
          source venv/bin/activate
          cd sceptre
          aws s3 cp templates/SC-ServiceLambdas.yaml s3://gd-threattools-prod-code-bucket/template/SC-ServiceLambdas.yaml --quiet
          sceptre launch -y prod/us-west-2

      - name: Update swagger
        run: |
          source venv/bin/activate
          cd sceptre
          ./resources/swagger-ui-bucket-create.sh

      # Close Change Order
      - name: Close Change Order
        uses: ./change-order-action
        with:
          snowUser: ${{ secrets.SNOW_USER }}
          snowPass: ${{ secrets.SNOW_PASS }}
          snowUrl: https://godaddy.service-now.com
          action: update
          owningGroup: ENG-Threat Research
          tag: ${{ steps.get-version.outputs.VERSION }}
          environment: production
          region: ${{ github.event.inputs.region }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          state: Complete
          id: ${{ steps.create-co.outputs.id }}
