name: ThreatAPI Deployment (DEV-PRIVATE)

# Deploys the ThreatAPI main branch to the AWS DEV PRIVATE environment using sceptre.

# This workflow needs to run on a self-hosted runner for the time being,
# because "go get" can't access modules on github.secureserver.net correctly
# when running on a GitHub hosted runner, even when the typical workarounds are
# in place to rewrite URLs from https://github.secureserver.net to
# git@github.secureserver.net and the GOPRIVATE environment variable has been
# set.

# It may be possible to avoid this restriction by reading:
# https://tip.golang.org/cmd/go/#hdr-Remote_import_paths
# and modifying modules that exist on github.secureserver.net by specifying
# ".git" in the import list, since the golang tools don't know that the vcs
# type of github.secureserver.net is "git".

# See: https://github.com/golang/go/issues/38964

# For now, can only be deployed manually through workflow_dispatch - Select your branch while running
on:
  workflow_dispatch:

jobs:
  deploy_to_dev_private:
    runs-on: [self-hosted,threat-runners]

    steps:
      - name: Reset gitconfig
        run: |
          rm -f $HOME/.gitconfig

      - name: Checkout
        uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
        with:
          aws-access-key-id: ${{ secrets.DEV_PRIVATE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_PRIVATE_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::345790377847:role/GD-AWS-USA-GD-ThreatTools-Dev-Private-Deploy
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Setup python environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -U pip

      - name: Install python dependencies
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
          SECURESERVER_ACCESS_KEY_GHC_SA: ${{ secrets.SECURESERVER_ACCESS_KEY_GHC_SA }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${SECURESERVER_ACCESS_KEY_GHC_SA}"

          source venv/bin/activate
          pip install -U -r requirements.txt -r requirements-test.txt

          ssh-agent -k

      - name: Setup golang environment
        uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab
        with:
          go-version: '1.17.2'

      - name: Install golang dependencies
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
          SECURESERVER_ACCESS_KEY_GHC_SA: ${{ secrets.SECURESERVER_ACCESS_KEY_GHC_SA }}
          GITHUBCLOUD_SSH_PRIVATE_KEY: ${{ secrets.GITHUBCLOUD_SSH_PRIVATE_KEY }}
          GH_ACCESS_TOKEN: ${{ secrets.REPO_CLONE_TOKEN_SA_PAT }}
          GOPRIVATE: "github.secureserver.net,github.com/gdcorp-*"
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${SECURESERVER_ACCESS_KEY_GHC_SA}"
          ssh-add - <<< "${GITHUBCLOUD_SSH_PRIVATE_KEY}"

          git config --global url.git@github.secureserver.net:.insteadOf https://github.secureserver.net/
          git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
          go mod tidy

          ssh-agent -k

      - name: Run sceptre
        run: |
          source venv/bin/activate
          cd sceptre
          aws s3 cp templates/SC-ServiceLambdas.yaml s3://gd-threattools-dev-private-code-bucket/template/SC-ServiceLambdas.yaml --quiet
          export NODE_ENV=sdfgdfsg
          sceptre launch -y dev-private/us-west-2

      - name: Update swagger
        run: |
          source venv/bin/activate
          cd sceptre
          ./resources/swagger-ui-bucket-create.sh
