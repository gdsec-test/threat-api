name: cirrus-scan-zaproxy-dev-private

# Post deployment fuzz testing for our endpoints
# For more information on the implementation refer - https://github.com/gdcorp-appservices/cirrus-scan-zaproxy

on:
  workflow_run:
    workflows:
      - ThreatAPI Deployment (DEV-PRIVATE)
    branches:
      - $default-branch
    types:
      - completed
  push:
    paths:
      - '.github/workflows/zaproxy-dev-private.yml'
  workflow_dispatch:

jobs:
  cirrus-scan-dev-private:
    runs-on: [self-hosted,threat-runners]
    env:
      AWS_REGION: us-west-2
    # Only run if previous workflow is successful (e.g., tests are green) or it's another event that qualifies.
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'

    steps:
      - name: Add Environmental Vars
        run: |
          echo REPO_NAME=`echo ${{ github.repository }} | awk -F '/' '{print $2}'` >> $GITHUB_ENV
          echo REPO_CHECKOUT_PATH=./`echo ${{ github.repository }} | awk -F '/' '{print $2}'`-${{ github.run_id }} >> $GITHUB_ENV
          echo CICD_ACCOUNT_ID=570415283994 >> $GITHUB_ENV
          echo CICD_DEPLOY_ROLE=arn:aws:iam::570415283994:role/GD-AWS-USA-GD-ThreatTools-CICD-Deploy >> $GITHUB_ENV
          echo DEPLOY_ROLE=arn:aws:iam::345790377847:role/GD-AWS-USA-GD-ThreatTools-Dev-Private-Deploy >> $GITHUB_ENV

      - name: Get Secrets
        id: masked-secrets
        run: |
          while [[ -z "$AWS_RESPONSE" ]]
          do
              AWS_RESPONSE=`aws --region=us-west-2 secretsmanager get-secret-value --secret-id=/GitHub/Runner-Secrets`
              sleep 1
          done
          CI_TOKEN=`echo $AWS_RESPONSE | jq -r .SecretString | jq -r .PAT`
          echo "::set-output name=ci-token::$CI_TOKEN"
          echo "::add-mask::$CI_TOKEN"
      
      - name: Checkout codebase
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
            repository: gdcorp-infosec/${{ env.REPO_NAME }}
            ref: ${{ github.ref }}
            token: ${{ steps.masked-secrets.outputs.ci-token }}
            path: ${{ env.REPO_CHECKOUT_PATH }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
        with:
          role-to-assume: ${{ env.DEPLOY_ROLE }}
          role-duration-seconds: 7200 # 2 hours
          role-skip-session-tagging: true
          aws-region: us-west-2
          
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076
        with:
          registries: 672751022979

      - name: Pull latest CirrusScan container image
        run: |
          docker pull 672751022979.dkr.ecr.us-west-2.amazonaws.com/cirrus-scan-cicd:latest
      - name: Run CirrusScan checks
        run: |
          docker run --rm \
          -e AWS_ACCESS_KEY_ID \
          -e AWS_SECRET_ACCESS_KEY \
          -e AWS_SESSION_TOKEN \
          -e AWS_DEFAULT_REGION \
          -e MAX_PASS=50 \
          -e TASK_LIST='["zaproxy"]' \
          -e GITHUB_URL=${GITHUB_SERVER_URL} \
          -e GITHUB_AUTH=${{ steps.masked-secrets.outputs.ci-token }} \
          -e GITHUB_REPO=${GITHUB_REPOSITORY} \
          -e GITHUB_COMMIT=${GITHUB_SHA} \
          672751022979.dkr.ecr.us-west-2.amazonaws.com/cirrus-scan-cicd
