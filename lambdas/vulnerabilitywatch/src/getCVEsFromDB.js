const { TABLE_NAME } = require('../const');
module.exports = async function getCVEsFromDB({ dynamodb }) {
  const query = {
    TableName: TABLE_NAME,
    ProjectionExpression: 'cve_id,score'
  };
  let dbCVEs = new Map();
  let LastEvaluatedKey, err;
  do {
    const result = await new Promise((resolve) => {
      const currentQuery = LastEvaluatedKey
        ? { ...query, ExclusiveStartKey: LastEvaluatedKey }
        : query;
      dynamodb.scan(currentQuery, function(err, data) {
        if (err) {
          console.log(err, err.stack);
          resolve({ err });
        } else {
          const { LastEvaluatedKey, Items = [], Count } = data;
          resolve({ LastEvaluatedKey, Items, Count });
        }
      });
    });
    LastEvaluatedKey = result.LastEvaluatedKey;
    err = result.err;

    const currentCVEs = new Map(
      Object.entries(
        result.Items.reduce((acc, item) => {
          const { cve_id: { S: ID } = {}, score: { N: score } = {} } = item;
          acc[ID] = score;
          return acc;
        }, {})
      )
    );
    dbCVEs = new Map([...dbCVEs, ...currentCVEs]);
  } while (LastEvaluatedKey && !err);
  return Promise.resolve(dbCVEs);
};
