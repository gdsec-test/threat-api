const winston = require('winston');
const WinstonCloudWatch = require('winston-cloudwatch');

const name = 'vulnerabilitywatch';
let _instance;

module.exports = {
  init: ({
    region = 'us-west-2',
    streamName = name,
    groupName = '/aws/lambda/'
  }) => {
    const Logger = new WinstonCloudWatch({
      name: 'using-' + name,
      logGroupName: groupName,
      logStreamName: streamName,
      awsRegion: region
    });
    this.logGroupName = groupName;
    this.logStreamName = streamName;
    _instance = winston.add(Logger);
  },
  flushLogs: () => {
    if (!_instance) {
      this.init();
    }
    const transport = _instance.transports.find(
      (t) => t.name === 'using-' + name
    );
    if (transport && transport[name]) {
      transport[name](function() {
        console.log('Flush logs');
      });
    }
  },
  log: (message = '') => {
    if (!_instance) {
      this.init();
    }
    winston.log({ level: 'info', message: message.toString() });
  },
  error: (message = '') => {
    if (!_instance) {
      this.init();
    }
    winston.log({ level: 'error', message: message.toString() });
  }
};
