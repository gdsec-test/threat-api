const AWS = require('aws-sdk');

module.exports = async function getSecretsAndParams({ region }) {
  const secretName = '/ThreatTools/Integrations/nvd';
  const client = new AWS.SecretsManager({
    region
  });
  return new Promise((resolve) => {
    client.getSecretValue({ SecretId: secretName }, function(err, data) {
      if (err) {
        if (err.code === 'DecryptionFailureException') {
          throw err;
        } else if (err.code === 'InternalServiceErrorException') {
          throw err;
        } else if (err.code === 'InvalidParameterException') {
          throw err;
        } else if (err.code === 'InvalidRequestException') {
          throw err;
        } else if (err.code === 'ResourceNotFoundException') {
          throw err;
        }
        resolve(err);
      } else {
        if ('SecretString' in data) {
          resolve(JSON.parse(data.SecretString));
        } else {
          let buff = new Buffer(data.SecretBinary, 'base64');
          resolve(buff.toString('ascii'));
        }
      }
    });
  });
};
