const { expect } = require('chai');
const createCVETableIfNotExist = require('../src/createCVETableIfNotExist');
const { TABLE_DEFINITION } = require('../src/const');
const AWS = require('aws-sdk');

describe('Create CVE Table If Not Exist', () => {
  let dynamoDB, describeTableStub, createTableStub;
  let describeErr;
  beforeEach(() => {
    describeTableStub = sandbox.stub().callsFake((opts, callback) => {
      callback(describeErr);
    });
    createTableStub = sandbox.stub().callsFake((opts, callback) => {
      callback();
    });
    dynamoDB = {
      describeTable: describeTableStub,
      createTable: createTableStub
    };
    sandbox.stub(AWS, 'DynamoDB').returns(dynamoDB);
  });

  it('should check if table exists', async () => {
    const res = await createCVETableIfNotExist({});
    expect(describeTableStub).to.have.been.calledOnce;
    expect(res).to.equal(true);
  });

  it('should create if table exists', async () => {
    describeErr = {
      code: 'ResourceNotFoundException'
    };
    await createCVETableIfNotExist({});
    expect(createTableStub).to.have.been.calledWith(TABLE_DEFINITION);
  });
});
