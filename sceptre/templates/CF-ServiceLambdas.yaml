AWSTemplateFormatVersion: 2010-09-09
Description: ThreatTools API Service Lambdas

Parameters:
  apivoidSHA1:
    Type: String
    Description: SHA1 hash of the apivoid lambda source
    Default: ""
  cmapSHA1:
    Type: String
    Description: SHA1 hash of the cmap lambda source
    Default: ""
  nvdSHA1:
    Type: String
    Description: SHA1 hash of the nvd lambda source
    Default: ""
  passivetotalSHA1:
    Type: String
    Description: SHA1 hash of the passivetotal lambda source
    Default: ""
  recordedfutureSHA1:
    Type: String
    Description: SHA1 hash of the recordedfuture lambda source
    Default: ""
  servicenowSHA1:
    Type: String
    Description: SHA1 hash of the servicenow lambda source
    Default: ""
  shodanSHA1:
    Type: String
    Description: SHA1 hash of the shodan lambda source
    Default: ""
  sucuriSHA1:
    Type: String
    Description: SHA1 hash of the sucuri lambda source
    Default: ""
  taniumSHA1:
    Type: String
    Description: SHA1 hash of the tanium lambda source
    Default: ""
  trustarSHA1:
    Type: String
    Description: SHA1 hash of the trustar lambda source
    Default: ""
  urlhausSHA1:
    Type: String
    Description: SHA1 hash of the urlhaus lambda source
    Default: ""
  urlscanioSHA1:
    Type: String
    Description: SHA1 hash of the urlscanio lambda source
    Default: ""
  virustotalSHA1:
    Type: String
    Description: SHA1 hash of the virustotal lambda source
    Default: ""
  whoisSHA1:
    Type: String
    Description: SHA1 hash of the whois lambda source
    Default: ""
  zerobounceSHA1:
    Type: String
    Description: SHA1 hash of the zerobounce lambda source
    Default: ""

Resources:
  apivoidLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub apivoid/${apivoidSHA1}
      Description: !Sub apivoid lambda (${apivoidSHA1})
      FunctionName: apivoid
      Handler: apivoid
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  apivoidLambdaPermission:
    DependsOn: apivoidLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:apivoid
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  apivoidSNSSubscription:
    DependsOn: apivoidLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt apivoidLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  apivoidLambdaEventInvokeConfig:
    DependsOn: apivoidLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: apivoid
      Qualifier: $LATEST

  apivoidLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/apivoid
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP", "URL"]}'

  apivoidLambdaEventInvokeConfig:
    DependsOn: apivoidLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: apivoid
      Qualifier: $LATEST

  cmapLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub cmap/${cmapSHA1}
      Description: !Sub cmap lambda (${cmapSHA1})
      FunctionName: cmap
      Handler: cmap
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  cmapLambdaPermission:
    DependsOn: cmapLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cmap
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  cmapSNSSubscription:
    DependsOn: cmapLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt cmapLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  cmapLambdaEventInvokeConfig:
    DependsOn: cmapLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: cmap
      Qualifier: $LATEST

  cmapLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/cmap
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN"], "actions": {"Run": {"requiredADGroups": ["ENG-Threat Research", "ENG-DCU"]}, "ViewPII": {"requiredADGroups": ["ENG-Threat Research", "ENG-DCU"]}}}'

  cmapLambdaEventInvokeConfig:
    DependsOn: cmapLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: cmap
      Qualifier: $LATEST

  nvdLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub nvd/${nvdSHA1}
      Description: !Sub nvd lambda (${nvdSHA1})
      FunctionName: nvd
      Handler: nvd
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  nvdLambdaPermission:
    DependsOn: nvdLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:nvd
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  nvdSNSSubscription:
    DependsOn: nvdLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt nvdLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  nvdLambdaEventInvokeConfig:
    DependsOn: nvdLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: nvd
      Qualifier: $LATEST

  nvdLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/nvd
      Type: String
      Value: '{"supportedIOCTypes": ["CVE"]}'

  nvdLambdaEventInvokeConfig:
    DependsOn: nvdLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: nvd
      Qualifier: $LATEST

  passivetotalLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub passivetotal/${passivetotalSHA1}
      Description: !Sub passivetotal lambda (${passivetotalSHA1})
      FunctionName: passivetotal
      Handler: passivetotal
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  passivetotalLambdaPermission:
    DependsOn: passivetotalLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:passivetotal
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  passivetotalSNSSubscription:
    DependsOn: passivetotalLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt passivetotalLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  passivetotalLambdaEventInvokeConfig:
    DependsOn: passivetotalLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: passivetotal
      Qualifier: $LATEST

  passivetotalLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/passivetotal
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP"]}'

  passivetotalLambdaEventInvokeConfig:
    DependsOn: passivetotalLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: passivetotal
      Qualifier: $LATEST

  recordedfutureLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub recordedfuture/${recordedfutureSHA1}
      Description: !Sub recordedfuture lambda (${recordedfutureSHA1})
      FunctionName: recordedfuture
      Handler: recordedfuture
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  recordedfutureLambdaPermission:
    DependsOn: recordedfutureLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:recordedfuture
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  recordedfutureSNSSubscription:
    DependsOn: recordedfutureLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt recordedfutureLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  recordedfutureLambdaEventInvokeConfig:
    DependsOn: recordedfutureLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: recordedfuture
      Qualifier: $LATEST

  recordedfutureLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/recordedfuture
      Type: String
      Value: '{"supportedIOCTypes": ["CVE", "IP", "MD5", "SHA1", "SHA256", "DOMAIN", "URL"]}'

  recordedfutureLambdaEventInvokeConfig:
    DependsOn: recordedfutureLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: recordedfuture
      Qualifier: $LATEST

  servicenowLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub servicenow/${servicenowSHA1}
      Description: !Sub servicenow lambda (${servicenowSHA1})
      FunctionName: servicenow
      Handler: servicenow
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  servicenowLambdaPermission:
    DependsOn: servicenowLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:servicenow
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  servicenowSNSSubscription:
    DependsOn: servicenowLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt servicenowLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  servicenowLambdaEventInvokeConfig:
    DependsOn: servicenowLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: servicenow
      Qualifier: $LATEST

  servicenowLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/servicenow
      Type: String
      Value: '{"supportedIOCTypes": ["GODADDY_HOSTNAME"]}'

  servicenowLambdaEventInvokeConfig:
    DependsOn: servicenowLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: servicenow
      Qualifier: $LATEST

  shodanLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub shodan/${shodanSHA1}
      Description: !Sub shodan lambda (${shodanSHA1})
      FunctionName: shodan
      Handler: shodan
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  shodanLambdaPermission:
    DependsOn: shodanLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:shodan
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  shodanSNSSubscription:
    DependsOn: shodanLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt shodanLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  shodanLambdaEventInvokeConfig:
    DependsOn: shodanLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: shodan
      Qualifier: $LATEST

  shodanLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/shodan
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP"]}'

  shodanLambdaEventInvokeConfig:
    DependsOn: shodanLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: shodan
      Qualifier: $LATEST

  sucuriLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub sucuri/${sucuriSHA1}
      Description: !Sub sucuri lambda (${sucuriSHA1})
      FunctionName: sucuri
      Handler: sucuri
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  sucuriLambdaPermission:
    DependsOn: sucuriLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:sucuri
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  sucuriSNSSubscription:
    DependsOn: sucuriLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt sucuriLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  sucuriLambdaEventInvokeConfig:
    DependsOn: sucuriLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: sucuri
      Qualifier: $LATEST

  sucuriLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/sucuri
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN"]}'

  sucuriLambdaEventInvokeConfig:
    DependsOn: sucuriLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: sucuri
      Qualifier: $LATEST

  taniumLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub tanium/${taniumSHA1}
      Description: !Sub tanium lambda (${taniumSHA1})
      FunctionName: tanium
      Handler: main.handler
      MemorySize: 128
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: python3.8
      Timeout: 900

  taniumLambdaPermission:
    DependsOn: taniumLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tanium
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  taniumSNSSubscription:
    DependsOn: taniumLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt taniumLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  taniumLambdaEventInvokeConfig:
    DependsOn: taniumLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: tanium
      Qualifier: $LATEST

  taniumLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/tanium
      Type: String
      Value: '{"supportedIOCTypes": ["GODADDY_HOSTNAME", "CPE"]}'

  trustarLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub trustar/${trustarSHA1}
      Description: !Sub trustar lambda (${trustarSHA1})
      FunctionName: trustar
      Handler: trustar-isac.handler
      MemorySize: 128
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: python3.8
      Timeout: 900

  trustarLambdaPermission:
    DependsOn: trustarLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:trustar
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  trustarSNSSubscription:
    DependsOn: trustarLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt trustarLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  trustarLambdaEventInvokeConfig:
    DependsOn: trustarLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: trustar
      Qualifier: $LATEST

  trustarLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/trustar
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP", "MD5", "SHA1", "SHA256", "URL", "CVE", "EMAIL"]}'

  trustarLambdaEventInvokeConfig:
    DependsOn: trustarLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: trustar
      Qualifier: $LATEST

  urlhausLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub urlhaus/${urlhausSHA1}
      Description: !Sub urlhaus lambda (${urlhausSHA1})
      FunctionName: urlhaus
      Handler: urlhaus
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  urlhausLambdaPermission:
    DependsOn: urlhausLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:urlhaus
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  urlhausSNSSubscription:
    DependsOn: urlhausLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt urlhausLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  urlhausLambdaEventInvokeConfig:
    DependsOn: urlhausLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: urlhaus
      Qualifier: $LATEST

  urlhausLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/urlhaus
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP", "URL", "MD5", "SHA256"]}'

  urlhausLambdaEventInvokeConfig:
    DependsOn: urlhausLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: urlhaus
      Qualifier: $LATEST

  urlscanioLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub urlscanio/${urlscanioSHA1}
      Description: !Sub urlscanio lambda (${urlscanioSHA1})
      FunctionName: urlscanio
      Handler: urlscanio
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  urlscanioLambdaPermission:
    DependsOn: urlscanioLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:urlscanio
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  urlscanioSNSSubscription:
    DependsOn: urlscanioLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt urlscanioLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  urlscanioLambdaEventInvokeConfig:
    DependsOn: urlscanioLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: urlscanio
      Qualifier: $LATEST

  urlscanioLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/urlscanio
      Type: String
      Value: '{"supportedIOCTypes": ["URL"]}'

  urlscanioLambdaEventInvokeConfig:
    DependsOn: urlscanioLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: urlscanio
      Qualifier: $LATEST

  virustotalLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub virustotal/${virustotalSHA1}
      Description: !Sub virustotal lambda (${virustotalSHA1})
      FunctionName: virustotal
      Handler: virustotal
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  virustotalLambdaPermission:
    DependsOn: virustotalLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:virustotal
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  virustotalSNSSubscription:
    DependsOn: virustotalLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt virustotalLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  virustotalLambdaEventInvokeConfig:
    DependsOn: virustotalLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: virustotal
      Qualifier: $LATEST

  virustotalLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/virustotal
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP", "URL", "MD5", "SHA256"]}'

  virustotalLambdaEventInvokeConfig:
    DependsOn: virustotalLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: virustotal
      Qualifier: $LATEST

  whoisLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub whois/${whoisSHA1}
      Description: !Sub whois lambda (${whoisSHA1})
      FunctionName: whois
      Handler: whois
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  whoisLambdaPermission:
    DependsOn: whoisLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:whois
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  whoisSNSSubscription:
    DependsOn: whoisLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt whoisLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  whoisLambdaEventInvokeConfig:
    DependsOn: whoisLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: whois
      Qualifier: $LATEST

  whoisLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/whois
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN"]}'

  whoisLambdaEventInvokeConfig:
    DependsOn: whoisLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: whois
      Qualifier: $LATEST

  zerobounceLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub zerobounce/${zerobounceSHA1}
      Description: !Sub zerobounce lambda (${zerobounceSHA1})
      FunctionName: zerobounce
      Handler: zerobounce
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 900

  zerobounceLambdaPermission:
    DependsOn: zerobounceLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:zerobounce
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  zerobounceSNSSubscription:
    DependsOn: zerobounceLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt zerobounceLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  zerobounceLambdaEventInvokeConfig:
    DependsOn: zerobounceLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: zerobounce
      Qualifier: $LATEST

  zerobounceLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/zerobounce
      Type: String
      Value: '{"supportedIOCTypes": ["EMAIL"]}'

  zerobounceLambdaEventInvokeConfig:
    DependsOn: zerobounceLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: zerobounce
      Qualifier: $LATEST
