AWSTemplateFormatVersion: 2010-09-09
Description: ThreatTools API Service Lambdas

Parameters:
  cmapSHA1:
    Type: String
    Description: SHA1 hash of the cmap lambda source
    Default: ""
  geoipSHA1:
    Type: String
    Description: SHA1 hash of the geoip lambda source
    Default: ""
  recordedfutureSHA1:
    Type: String
    Description: SHA1 hash of the recordedfuture lambda source
    Default: ""
  shodanSHA1:
    Type: String
    Description: SHA1 hash of the shodan lambda source
    Default: ""
  splunkSHA1:
    Type: String
    Description: SHA1 hash of the splunk lambda source
    Default: ""
  tester1SHA1:
    Type: String
    Description: SHA1 hash of the tester1 lambda source
    Default: ""
  urlhausSHA1:
    Type: String
    Description: SHA1 hash of the urlhaus lambda source
    Default: ""
  whoisSHA1:
    Type: String
    Description: SHA1 hash of the whois lambda source
    Default: ""

Resources:
  cmapLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub cmap/${cmapSHA1}
      Description: !Sub cmap lambda (${cmapSHA1})
      FunctionName: cmap
      Handler: cmap
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 15

  cmapLambdaPermission:
    DependsOn: cmapLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cmap
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  cmapSNSSubscription:
    DependsOn: cmapLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt cmapLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  cmapLambdaEventInvokeConfig:
    DependsOn: cmapLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: cmap
      Qualifier: $LATEST

  cmapLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/cmap
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN"], "actions": {"Run": {"requiredADGroups": ["Eng-ThreatIntel"]}}}'

  geoipLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub geoip/${geoipSHA1}
      Description: !Sub geoip lambda (${geoipSHA1})
      FunctionName: geoip
      Handler: geoip
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 15

  geoipLambdaPermission:
    DependsOn: geoipLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:geoip
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  geoipSNSSubscription:
    DependsOn: geoipLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt geoipLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  geoipLambdaEventInvokeConfig:
    DependsOn: geoipLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: geoip
      Qualifier: $LATEST

  geoipLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/geoip
      Type: String
      Value: '{"supportedIOCTypes": ["IP"]}'

  recordedfutureLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub recordedfuture/${recordedfutureSHA1}
      Description: !Sub recordedfuture lambda (${recordedfutureSHA1})
      FunctionName: recordedfuture
      Handler: recordedfuture
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 15

  recordedfutureLambdaPermission:
    DependsOn: recordedfutureLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:recordedfuture
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  recordedfutureSNSSubscription:
    DependsOn: recordedfutureLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt recordedfutureLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  recordedfutureLambdaEventInvokeConfig:
    DependsOn: recordedfutureLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: recordedfuture
      Qualifier: $LATEST

  recordedfutureLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/recordedfuture
      Type: String
      Value: '{"supportedIOCTypes": ["CVE", "IP"]}'

  shodanLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub shodan/${shodanSHA1}
      Description: !Sub shodan lambda (${shodanSHA1})
      FunctionName: shodan
      Handler: shodan
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 15

  shodanLambdaPermission:
    DependsOn: shodanLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:shodan
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  shodanSNSSubscription:
    DependsOn: shodanLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt shodanLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  shodanLambdaEventInvokeConfig:
    DependsOn: shodanLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: shodan
      Qualifier: $LATEST

  shodanLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/shodan
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP"]}'

  splunkLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub splunk/${splunkSHA1}
      Description: !Sub splunk lambda (${splunkSHA1})
      FunctionName: splunk
      Handler: splunk
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 300

  splunkLambdaPermission:
    DependsOn: splunkLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:splunk
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  splunkSNSSubscription:
    DependsOn: splunkLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt splunkLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  splunkLambdaEventInvokeConfig:
    DependsOn: splunkLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: splunk
      Qualifier: $LATEST

  splunkLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/splunk
      Type: String
      Value: '{"supportedIOCTypes": ["GODADDY_USERNAME", "IP", "CVE", "AWSHOSTNAME"], "actions": {"ReadSplunk": {"requiredADGroups": ["Eng-ThreatIntel"]}}}'

  tester1LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub tester1/${tester1SHA1}
      Description: !Sub tester1 lambda (${tester1SHA1})
      FunctionName: tester1
      Handler: tester1.handler
      MemorySize: 128
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: python3.7
      Timeout: 15

  tester1LambdaPermission:
    DependsOn: tester1LambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tester1
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  tester1SNSSubscription:
    DependsOn: tester1LambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt tester1LambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  tester1LambdaEventInvokeConfig:
    DependsOn: tester1LambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: tester1
      Qualifier: $LATEST

  tester1LambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/tester1
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP", "UNKNOWN"]}'

  urlhausLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub urlhaus/${urlhausSHA1}
      Description: !Sub urlhaus lambda (${urlhausSHA1})
      FunctionName: urlhaus
      Handler: urlhaus
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 15

  urlhausLambdaPermission:
    DependsOn: urlhausLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:urlhaus
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  urlhausSNSSubscription:
    DependsOn: urlhausLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt urlhausLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  urlhausLambdaEventInvokeConfig:
    DependsOn: urlhausLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: urlhaus
      Qualifier: $LATEST

  urlhausLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/urlhaus
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN", "IP", "URL", "MD5", "SHA256"]}'

  whoisLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub gd-threattools-${AWS::AccountId}-code-bucket
        S3Key: !Sub whois/${whoisSHA1}
      Description: !Sub whois lambda (${whoisSHA1})
      FunctionName: whois
      Handler: whois
      MemorySize: 256
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/threattools-custom-ThreatRole
      Runtime: go1.x
      Timeout: 15

  whoisLambdaPermission:
    DependsOn: whoisLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:whois
      Principal: sns.amazonaws.com
      SourceArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  whoisSNSSubscription:
    DependsOn: whoisLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt whoisLambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:JobRequests

  whoisLambdaEventInvokeConfig:
    DependsOn: whoisLambdaFunction
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobResponses
        OnFailure:
          Destination: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:JobFailures
      FunctionName: whois
      Qualifier: $LATEST

  whoisLambdaMetadata:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ThreatTools/Modules/whois
      Type: String
      Value: '{"supportedIOCTypes": ["DOMAIN"]}'
